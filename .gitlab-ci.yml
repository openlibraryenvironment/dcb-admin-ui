variables:
  FF_USE_FASTZIP: "true"
  # These can be specified per job or per pipeline
  ARTIFACT_COMPRESSION_LEVEL: "fast"
  CACHE_COMPRESSION_LEVEL: "fast"

default:
  image: 
    name: node:22.12.0-bullseye
    pull_policy: if-not-present

  tags:
    - ki-onprem

stages:
  - build
  - container

cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - dcb-hub-admin-ui/.npm/
    - dcb-hub-admin-ui/node-modules/
    - .yarn
    - .npm

build:
  stage: build
  image: 
    name: node:22.12.0-bullseye
    pull_policy: if-not-present
  tags:
    - ki-onprem
  script:
    - export NPM_TOKEN="$NPMJS_TOKEN"
    - git config --global user.name "ianibbo"
    - git config --global user.email "ian.ibbotson@k-int.com"
    - cd dcb-hub-admin-ui
    - pwd
    - ls -al
    - echo " { \"releaseDate\":\"`date +"%Y-%m-%dT%H:%M:%S%z"`\", \"RELEASED_AT\":\"$RELEASED_AT\" } " > ./release-info.json
    - npm install
    - npm run semantic-release

# build-container-image:
#   image: 
#     name: docker:stable
#     pull_policy: if-not-present
#   stage: build
#   only:
#     - release
#   tags:
#     - ki-onprem
#   script:
#     - echo Building container image
#     - pwd
#     - ls
#     - cd dcb-hub-admin-ui
#     - docker info
#     - docker login -u $NEXUS_USER -p $NEXUS_PASS docker.libsdev.k-int.com
#     - docker build -f ./docker/production/Dockerfile -t docker.libsdev.k-int.com/knowledgeintegration/ki-dcb-admin:latest -t docker.libsdev.k-int.com/knowledgeintegration/ki-dcb-admin:v1 .
#     - docker push docker.libsdev.k-int.com/knowledgeintegration/ki-dcb-admin:latest
#     - docker push docker.libsdev.k-int.com/knowledgeintegration/ki-dcb-admin:v1
#     - docker images
